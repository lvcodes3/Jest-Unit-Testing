Type of Testing:

    1. Unit Testing:
        Testing individual functions that all together make our entire codebase.

    2. Integration Testing:
        Software modules or functions that are integrated together are tested as a group.

    3. End To End Testing:
        This involves automated testing the entire software or completed major parts of the software.
        Involves using PupeteerJS along with Jest.



Jest:

    Jest is a JavaScript Testing Framework with a focus on simplicity.

    It works with projects using: Babel, TypeScript, Node, React, Angular, Vue, and more.



Zsh Commands:

    npm test - defined in package.json, used to run all tests in inside tests directory



Configuring Jest To Support ES modules (import / export):

    Jest uses CommonJs by default, so we can configure it with babel-jest to enable jest to handle ES module syntax.

    1. Ensure ES Module Support in Jest:
    
        Add to package.json:

        {
            "jest": {
              "transform": {
                "^.+\\.js$": "babel-jest"
              }
            }
        }

    2. Install More Dependencies:

        npm install --D babel-jest @babel/core @babel/preset-env

    3. Configure Babel:

        Add to package.json:

        "babel": {
            "presets": ["@babel/preset-env"]
        }